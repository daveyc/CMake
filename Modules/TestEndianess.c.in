/* A 16 bit integer is required. */
typedef @CMAKE_16BIT_TYPE@ cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
#ifdef __MVS__
const cmakeint16 info_little[] =  {0xc8e3, 0xe2c9, 0xc940, 0x40e2, 0xc9d3, 0xe3e3, 0xc5d3, 0xc540, 0xc4d5, 0xc1c9, 0x4bd5, 0x0000};
#else
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};
#endif

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
#ifdef __MVS__
const cmakeint16 info_big[] =     {0xe3c8, 0xc9e2, 0x40c9, 0xe240, 0xc2c9, 0xc740, 0xc5d5, 0xc4c9, 0xc1d5, 0x4b4b, 0x0000};
#else
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};
#endif

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}
